<h1>HIIIII im me</h1>
this is my first webpage...
I want to contue but its almost 2 am
<br>
<br>
about 42 mins in, we still need to ensure success
<br>
<br>
now im 1:03:22, lets get it!
<br>
<br>
crud is the easiest thing with ruby, we will create a crud database, what does crud stand for? Create, Read, Update, Destroy.
<br>
I have now created my first list on a database which i manage, this is awesome! anyways im on 1:21:36, keep on truckin.
<br>
<br>
The first half of this last lesson was all bootstrap coding. It started with styling the friends list, we changedd the header to a dark theme, also changed the inner table styling to a border, and finally gave it a hover effect. Then we styled the buttons to reflect our current colors and mood. And also forgot to mention that we gave it new alerts while deleting the "notices".
<br>
The second half was to add a user sign in, sign out, sign up, and edit profile option. In order to do that we needed to install an important gem called devise. With looking at the documentation, we found out how to implement the use case properly, following the directions on the terminal, it was installed and developed successfully, remember we commented it out on the production side. Then we used if else statements to categorize what we see whether we are signed in or out.<br> Currently at 2:02:18.
<br>
<br>
This next lesson began with bootstrapping the sign up, login, and edit profile pages. We made them look better with a card from the documentation page and gave the titles a header for appearance. I also decided to leave a header on top of the params as well as a disapearing text inside the params. The cancel my account section is also a card.
<br>
Then for the next lesson we chose to work on associations. I made the belongs to association connect with the friends database. But in order to make it work, I had to destroy every friend in that current database while also destroying the k@k.com account that i previously made. The goal with this is to only allow the signed in profile to only view their added friends, if i sign up with a new account that new account should not see k@k.coms friends. More on that in the next lesson. <br> We are making good work, im at 2:45:45.
<br>
<br>
This next lesson adds some security to our application. By giving certain permissions to each current user, only the ones that are signed in can view the list of friends, and only the ones that created that friend will be able to view, edit, or destroy that friend. We went over some database statements, and even gave a new notice to hackers that try and access the wrong friends list. Wowee! <br> Currently at 3:06:36.